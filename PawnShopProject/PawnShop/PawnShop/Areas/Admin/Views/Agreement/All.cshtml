@using PawnShop.Core.Models.Agreement
@model AllAgreementQueryViewModel

@{
	ViewBag.Title = "All Agreements";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
	<div class="row">
		@* <div class="form-group">
			<div class="form-group col-md-3 d-flex justify-content-between">
				<div class="form-group">
					<label asp-for="AgreementStates"></label>
					<select asp-for="AgreementStates" class="form-control">
						<option value="">All</option>
						@foreach (var astate in Model.AgreementStates)
						{
							<option value="@astate">@astate</option>
						}
					</select>
				</div>
			</div>
		</div> *@

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="State"></label>
				<select asp-for="State" class="form-control">
					<option value="0">Аll</option>
					<option value="1">Аwaiting approval</option>
					<option value="2">Approved (Active)</option>
					<option value="3">Finish</option>
					<option value="4">Late</option>
					<option value="5">For a Shop</option>
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchItem"></label>
			<input asp-for="SearchItem" class="form-control" placeholder="...">
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Highest price first</option>
				</select>
			</div>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>


@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalAgreementCount /
		Model.AgreementPerPage);
}

<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Agreement"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-category="@Model.State"
		   asp-route-searchTerm="@Model.SearchItem"
		   asp-route-sorting="@((int)Model.Sorting)"><<</a>
	</div>

	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Agreements.Any();
	}

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Agreement"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-category="@Model.State"
		   asp-route-searchTerm="@Model.SearchItem"
		   asp-route-sorting="@((int)Model.Sorting)">>></a>
	</div>
</div>

@if (!Model.Agreements.Any())
{
	<h2 class="text-center">No agreements found by the given criteria!</h2>
}

<div class="row">
	@foreach (var agreement in Model.Agreements)
	{
		<partial name="_AgreementPartial" model="@agreement" />
	}
</div>

